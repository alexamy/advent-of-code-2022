// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function at(heightmap, param) {
  var row = Belt_Option.getExn(Belt_Array.get(heightmap, param[0]));
  return Belt_Option.getExn(Belt_Array.get(row, param[1]));
}

function findIndex(heightmap, ch) {
  var rowIndex = Belt_Option.getExn(Belt_Array.getIndexBy(heightmap, (function (row) {
              return row.includes(ch);
            })));
  var colIndex = Belt_Option.getExn(Belt_Array.getIndexBy(Belt_Option.getExn(Belt_Array.get(heightmap, rowIndex)), (function (el) {
              return el === ch;
            })));
  return [
          rowIndex,
          colIndex
        ];
}

var Heightmap = {
  at: at,
  findIndex: findIndex
};

function fromCharCode(prim) {
  return String.fromCharCode(prim);
}

function toCharCode(s) {
  return s.charCodeAt(0);
}

function getCharLess(s) {
  return String.fromCharCode((s.charCodeAt(0) | 0) - 1 | 0);
}

var Char = {
  fromCharCode: fromCharCode,
  toCharCode: toCharCode,
  getCharLess: getCharLess
};

function start(input) {
  return input.split("\n").map(function (s) {
              return s.split("");
            });
}

var Parse = {
  start: start
};

var solve1 = start;

function solve2(_input) {
  
}

export {
  Heightmap ,
  Char ,
  Parse ,
  solve1 ,
  solve2 ,
}
/* No side effect */
